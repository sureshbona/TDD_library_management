"use strict";

// Module dependencies.
const app = require("../app");
const config = require('../config/config.js');
var http = require("http");


// set port
const port = global.gConfig.node_port
app.set("port", port);


// Create HTTP server.
const server = http.createServer(app);

// Listen on provided port, on all network interfaces.
server.listen(port);
server.on("error", onError);
server.on("listening", onListening);


// Event listener for HTTP server "error" event.
function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  // handle specific listen errors
  switch (error.code) {
    case "EADDRINUSE":
      console.error(port + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// Event listener for HTTP server "listening" event.
function onListening() {
  console.log(`hexad server listening on port ${port}`);
}